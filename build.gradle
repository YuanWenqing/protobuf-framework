buildscript {
    repositories {
//        mavenCentral()
        mavenLocal()
        maven {
            name "nexus"
            url "https://nexus.ilovelook.cn/repository/maven-public/"
            credentials {
                username property("nexus.username")
                password property("nexus.password")
            }
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
    }
}

ext {
    springBootVersion = '2.0.3.RELEASE'
    springVersion = '5.0.7.RELEASE'
}

// project setting
subprojects {
    group = "org.protoframework"
    version = "0.7.4"

    repositories {
        mavenLocal()
        maven {
            name "nexus"
            url "https://nexus.ilovelook.cn/repository/maven-public/"
            credentials {
                username property("nexus.username")
                password property("nexus.password")
            }
        }
    }

    apply plugin: "java"
    apply plugin: "java-library"
    apply plugin: "jacoco"

    jar << {
        println jar.archivePath
    }
    task sourcesJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.allJava
        classifier = 'sources'
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    jacocoTestReport.dependsOn(test)
    jacocoTestReport << {
        println jacocoTestReport.reports.html.entryPoint
    }

    test << {
        println test.reports.html.entryPoint
    }

    dependencies {

        // Nullable & NonNull
        // http://spotbugs.readthedocs.io/en/latest/migration.html
        compileOnly('com.github.spotbugs:spotbugs-annotations:3.1.3')

        // test
        testImplementation('junit:junit:4.12')

    }

}
configure(subprojects.findAll {
    it.plugins.hasPlugin('maven-publish')
}) {
    afterEvaluate {
        project.publishing.publications {
            mavenJava(MavenPublication) {
                from components.java
                artifactId project.archivesBaseName
                version project.version

                artifact sourcesJar
            }
        }
        project.publishToMavenLocal {
            doLast {
                def pub = publishing.publications.mavenJava
                println "artifact: ${pub.groupId}:${pub.artifactId}:${pub.version}"
            }
        }
    }
}

buildscript {
    repositories {
//        mavenCentral()
        mavenLocal()
        maven {
            name "nexus"
            url "https://nexus.ilovelook.cn/repository/maven-public/"
            credentials {
                username property("nexus.username")
                password property("nexus.password")
            }
        }
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobufPluginVersion"
    }
}

// project setting
subprojects {
    group = "org.protoframework"
    version = "0.8.1"

    ext {
        publishable = true
    }

    repositories {
        mavenLocal()
        maven {
            name "nexus"
            url "https://nexus.ilovelook.cn/repository/maven-public/"
            credentials {
                username property("nexus.username")
                password property("nexus.password")
            }
        }
    }

    apply plugin: "java"
    apply plugin: "java-library"
    apply plugin: "jacoco"

    jar << {
//        println jar.archivePath
    }
    task sourcesJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.allJava
        classifier = 'sources'
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    jacocoTestReport.dependsOn(test)
    jacocoTestReport << {
        println jacocoTestReport.reports.html.entryPoint
    }

    test << {
        println test.reports.html.entryPoint
    }

    dependencies {
        // test
        testImplementation("junit:junit:$junitVersion")
    }

}

project(":test-proto") {
    ext.publishable = false
}
// 配置发布
configure(subprojects.findAll { it.ext.publishable }) {
    // 在这里应用插件，否则相关publishing配置无法生效，but why?
    apply plugin: 'maven-publish'
    afterEvaluate {
        project.publishing.publications {
            mavenJava(MavenPublication) {
                from components.java
                artifactId project.archivesBaseName
                version project.version

                artifact sourcesJar
            }
        }
        project.publishToMavenLocal {
            doLast {
                def pub = publishing.publications.mavenJava
                println "artifact: ${pub.groupId}:${pub.artifactId}:${pub.version}"
            }
        }
        project.task('local').dependsOn(project.publishToMavenLocal)
    }
}
